@model ML.Alumno
@{
    ViewBag.Title = "GetAll";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class=row>
        <div class="text-center">
            <h2>Lista de Alumnos</h2>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <h5>Seleccione un alumno para ver su información o el botón de "+" para agregar un nuevo registro</h5>
        </div>
    </div>
    <hr />
    <div id="modalContainer"></div>

    <div class="row">
        <div class="col-auto ms-auto">
            <button id="btnAgregar" onclick="AbrirModal()" class="btn btn-success"><i class="fa-regular fa-square-plus"></i>+</button>
        </div>
    </div>
    <br />
    <div id="ViewBag" style="display: none">@TempData["value"]</div>
    <div class="modal fade " id="Modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            @using (Html.BeginForm("Form", "Alumno1", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="modal-content">
                    <div class="modal-header alert-secondary">
                        <h5 class="modal-title" id="exampleModalLabel">Formulario de Productos</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="CerrarModal()">X</button>
                    </div>
                    <div class="modal-body">

                        @Html.HiddenFor(model => model.IdAlumno)
                        <div class="row">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Nombre)
                                <div class="input-group ">
                                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-user-plus" style="color:black"></i></span>
                                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtFechaNacimiento", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.Nombre)
                                </div>
                            </div>
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.ApellidoPaterno)
                                <div class="input-group ">
                                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-dollar-sign"></i></span>
                                    @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id = "txtFechaNacimiento", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                                </div>
                            </div>
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.ApellidoMaterno)
                                <div class="input-group ">
                                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-cubes-stacked"></i></span>
                                    @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @id = "txtFechaNacimiento", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="CerrarModal()">Salir</button>
                        <button id="btnGuardar" type="submit" class="btn btn-success"><i class="fa-solid fa-floppy-disk" style="color: #000000;" @*onclick="NewModal()"*@></i> Guardar</button>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="modal fade " id="NewModal1" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header alert-secondary">
                    <div class="alert alert-success" role="alert">
                        Una simple alerta success: ¡échale un vistazo!
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (Model.Alumnos == null || Model.Alumnos.Count == 0)
    {
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-warning" role="alert">
                    <i class="fa-solid fa-triangle-exclamation" style="color: #c24e00;"></i> No existen registros de productos
                </div>
            </div>
        </div>
    }
    else
    {
        <table class="table  table-dark table-hover table-striped table-bordered table-responsive" id="table_usuarios">
            <thead>
                <tr class="table-secondary">
                    <td>Editar</td>
                    <td style="display :none;">id</td>
                    <td>Nombre</td>
                    <td>Eliminar</td>
                </tr>
            </thead>
            <tbody>
                @foreach (ML.Alumno alumno in Model.Alumnos)
                {
                    <tr>
                        <td style="text-align: center; vertical-align: middle;"><a class="btn btn-warning glyphicon glyphicon-edit" href="@Url.Action("Form", "Alumno1", new { IdAlumno = alumno.IdAlumno})"><i class="bi bi-pencil-square" style="color: ivory"></i></a></td>
                        <td style="display :none;">@alumno.IdAlumno</td>
                        <td style="text-align: center">@alumno.Nombre @alumno.ApellidoPaterno @alumno.ApellidoMaterno</td>

                        <td style="text-align: center; vertical-align: middle;"><a class="btn btn-danger glyphicon glyphicon-trash" href="@Url.Action("Delete", "Alumno1", new { IdAlumno = alumno.IdAlumno})" onclick="return confirm('Estas seguro que deseas eliminar este registro?');"><i class="bi bi-eraser-fill" style="color: mintcream"></i></a></td>
                    </tr>
                }

            </tbody>
        </table>
    }

</div>
@Scripts.Render("~/bundles/jquery")
<script type="text/javascript">

    function AbrirModal() {
        $('#Modal').modal('show');
    }
    function CerrarModal() {
        $('#Modal').modal('hide');
    }
    $(document).ready(function () {
        $('#NewModal1').modal('@Model.Mensaje');
    });

    //function NewModal() {
    //    $('#Modal').modal('hide');
    //    $('#NewModal1').modal('show');
    //}
     //window.onload = function () {
     //    var viewbag = $('#ViewBag').text()
     //   if ($('#ViewBag').text() != ""){
     //       $('#modalContainer').load('/Producto/ModalAction');
     //   }
     //}

</script>

